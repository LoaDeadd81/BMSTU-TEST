version: "3.8"
services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      PGDATA: ${DB_PGDATA}
    volumes:
      - pgdata_test:${DB_PGDATA}
      - ./src/docker/db/init:/docker-entrypoint-initdb.d/
    ports:
      - ${DB_PORT}:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 3s
      timeout: 5s
      retries: 5
      start_period: 5s
    networks:
      - db_master


#  web:
#    build: src/docker/web
#    volumes:
#      - ./src/code:${APP_PATH}
#      - ./src/code/RestAPI/resources/openapi:${OPEN_API_PATH}
#      - ./README.md:/docs/README.md
#    env_file:
#      - .env
#    environment:
#      - DB_HOST=${DB_HOST_DOCKER}
#      - DB_USER=${DB_USER}
#      - DB_PASSWORD=${DB_PASSWORD}
#      - DB_PORT=${DB_PORT_DOCKER}
##      - JAVA_TOOL_OPTIONS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005"
#    expose:
#      - "${PORT}"
#      - "5005"
#    ports:
#      - "8001:${PORT}"
#      - "5005:5005"
#    depends_on:
#      db:
#        condition: service_healthy
#    networks:
#      - db_master

volumes:
  pgdata_test:
    driver: local

networks:
  db_master: